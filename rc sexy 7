local ScreenGui = Instance.new("ScreenGui")
local Open = Instance.new("TextButton")
local Main = Instance.new("ImageLabel")
local EditorFrame = Instance.new("ScrollingFrame")
local Source = Instance.new("TextBox")
local Tokens_ = Instance.new("TextLabel")
local Strings_ = Instance.new("TextLabel")
local RemoteHighlight_ = Instance.new("TextLabel")
local Numbers_ = Instance.new("TextLabel")
local Keywords_ = Instance.new("TextLabel")
local Globals_ = Instance.new("TextLabel")
local Comments_ = Instance.new("TextLabel")
local Open_2 = Instance.new("TextButton")
local clear = Instance.new("TextButton")
local exec = Instance.new("TextButton")
local Exit = Instance.new("TextButton")
local Lines = Instance.new("TextLabel")
local ScrollingFrame = Instance.new("ScrollingFrame")

local function protectUI(sGui)
    local function SafeGetService(name)
        local service = (cloneref and cloneref(game:GetService(name))) or game:GetService(name)
        return service
    end

    if sGui:IsA("ScreenGui") then
        sGui.ZIndexBehavior = Enum.ZIndexBehavior.Global
		sGui.DisplayOrder = 999999999
		sGui.ResetOnSpawn = false
		sGui.IgnoreGuiInset = true
    end
    local cGUI = SafeGetService("CoreGui")
    local lPlr = SafeGetService("Players").LocalPlayer

    local function NAProtection(inst, var)
        if inst then
            if var then
                inst[var] = "\0"
                inst.Archivable = false
            else
                inst.Name = "\0"
                inst.Archivable = false
            end
        end
    end

    if gethui then
		NAProtection(sGui)
		sGui.Parent = gethui()
		return sGui
	elseif cGUI and cGUI:FindFirstChild("RobloxGui") then
		NAProtection(sGui)
		sGui.Parent = cGUI:FindFirstChild("RobloxGui")
		return sGui
	elseif cGUI then
		NAProtection(sGui)
		sGui.Parent = cGUI
		return sGui
	elseif lPlr and lPlr:FindFirstChild("PlayerGui") then
		NAProtection(sGui)
		sGui.Parent = lPlr:FindFirstChild("PlayerGui")
		sGui.ResetOnSpawn = false
		return sGui
	else
		return nil
	end
end

protectUI(ScreenGui)
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Open.Name = "Open"
Open.Parent = ScreenGui
Open.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Open.BorderSizePixel = 0
Open.Position = UDim2.new(0, 0, 0.976239681, 0)
Open.Size = UDim2.new(0, 24, 0, 14)
Open.Visible = false
Open.Font = Enum.Font.SourceSans
Open.Text = ""
Open.TextColor3 = Color3.fromRGB(0, 0, 0)
Open.TextSize = 14.000

Main.Name = "Main"
Main.Parent = ScreenGui
Main.Active = true
Main.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Main.BorderSizePixel = 0
Main.Position = UDim2.new(0.649910629, 0, 0.389118433, 0)
Main.Size = UDim2.new(0, 337, 0, 341)
Main.Image = "http://www.roblox.com/asset/?id=12263991723"

EditorFrame.Name = "EditorFrame"
EditorFrame.Parent = Main
EditorFrame.Active = true
EditorFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
EditorFrame.BorderSizePixel = 0
EditorFrame.Position = UDim2.new(0.0339522101, 0, 0.102768078, 0)
EditorFrame.Size = UDim2.new(0, 284, 0, 224)
EditorFrame.CanvasSize = UDim2.new(0, 0, 1000, 0)
EditorFrame.ScrollBarThickness = 0

Source.Name = "Source"
Source.Parent = EditorFrame
Source.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Source.BorderSizePixel = 0
Source.Position = UDim2.new(0.0021330067, 0, 0, 0)
Source.Size = UDim2.new(0, 283, 0, 9999999)
Source.Font = Enum.Font.SourceSans
Source.MultiLine = true
Source.Text = ""
Source.TextColor3 = Color3.fromRGB(0, 0, 0)
Source.TextSize = 19.000
Source.TextWrapped = true
Source.TextXAlignment = Enum.TextXAlignment.Left
Source.TextYAlignment = Enum.TextYAlignment.Top

Tokens_.Name = "Tokens_"
Tokens_.Parent = Source
Tokens_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Tokens_.BackgroundTransparency = 1.000
Tokens_.Size = UDim2.new(0, 200, 0, 50)
Tokens_.Font = Enum.Font.SourceSans
Tokens_.TextColor3 = Color3.fromRGB(0, 0, 0)
Tokens_.TextSize = 14.000
Tokens_.TextTransparency = 1.000

Strings_.Name = "Strings_"
Strings_.Parent = Source
Strings_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Strings_.BackgroundTransparency = 1.000
Strings_.Size = UDim2.new(0, 200, 0, 50)
Strings_.Font = Enum.Font.SourceSans
Strings_.TextColor3 = Color3.fromRGB(0, 0, 0)
Strings_.TextSize = 14.000
Strings_.TextTransparency = 1.000

RemoteHighlight_.Name = "RemoteHighlight_"
RemoteHighlight_.Parent = Source
RemoteHighlight_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
RemoteHighlight_.BackgroundTransparency = 1.000
RemoteHighlight_.Size = UDim2.new(0, 200, 0, 50)
RemoteHighlight_.Font = Enum.Font.SourceSans
RemoteHighlight_.TextColor3 = Color3.fromRGB(0, 0, 0)
RemoteHighlight_.TextSize = 14.000
RemoteHighlight_.TextTransparency = 1.000

Numbers_.Name = "Numbers_"
Numbers_.Parent = Source
Numbers_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Numbers_.BackgroundTransparency = 1.000
Numbers_.Size = UDim2.new(0, 200, 0, 50)
Numbers_.Font = Enum.Font.SourceSans
Numbers_.TextColor3 = Color3.fromRGB(0, 0, 0)
Numbers_.TextSize = 14.000
Numbers_.TextTransparency = 1.000

Keywords_.Name = "Keywords_"
Keywords_.Parent = Source
Keywords_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Keywords_.BackgroundTransparency = 1.000
Keywords_.Size = UDim2.new(0, 200, 0, 50)
Keywords_.Font = Enum.Font.SourceSans
Keywords_.TextColor3 = Color3.fromRGB(0, 0, 0)
Keywords_.TextSize = 14.000
Keywords_.TextTransparency = 1.000

Globals_.Name = "Globals_"
Globals_.Parent = Source
Globals_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Globals_.BackgroundTransparency = 1.000
Globals_.Size = UDim2.new(0, 200, 0, 50)
Globals_.Font = Enum.Font.SourceSans
Globals_.TextColor3 = Color3.fromRGB(0, 0, 0)
Globals_.TextSize = 14.000
Globals_.TextTransparency = 1.000

Comments_.Name = "Comments_"
Comments_.Parent = Source
Comments_.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Comments_.BackgroundTransparency = 1.000
Comments_.Size = UDim2.new(0, 200, 0, 50)
Comments_.Font = Enum.Font.SourceSans
Comments_.TextColor3 = Color3.fromRGB(0, 0, 0)
Comments_.TextSize = 14.000
Comments_.TextTransparency = 1.000

Open_2.Name = "Open"
Open_2.Parent = Main
Open_2.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
Open_2.BackgroundTransparency = 1.000
Open_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Open_2.BorderSizePixel = 0
Open_2.Position = UDim2.new(0.0339522101, 0, 0.760739207, 0)
Open_2.Size = UDim2.new(0, 92, 0, 27)
Open_2.Font = Enum.Font.SourceSansBold
Open_2.Text = "Open"
Open_2.TextColor3 = Color3.fromRGB(20, 74, 110)
Open_2.TextSize = 19.000
Open_2.TextWrapped = true

clear.Name = "clear"
clear.Parent = Main
clear.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
clear.BackgroundTransparency = 1.000
clear.BorderColor3 = Color3.fromRGB(0, 0, 0)
clear.BorderSizePixel = 0
clear.Position = UDim2.new(0.595106542, 0, 0.760739207, 0)
clear.Size = UDim2.new(0, 95, 0, 26)
clear.Font = Enum.Font.SourceSansBold
clear.Text = "Clear"
clear.TextColor3 = Color3.fromRGB(20, 74, 110)
clear.TextSize = 19.000
clear.TextWrapped = true

exec.Name = "exec"
exec.Parent = Main
exec.BackgroundColor3 = Color3.fromRGB(24, 24, 24)
exec.BackgroundTransparency = 1.000
exec.BorderColor3 = Color3.fromRGB(0, 0, 0)
exec.BorderSizePixel = 0
exec.Position = UDim2.new(0.310228467, 0, 0.760739207, 0)
exec.Size = UDim2.new(0, 95, 0, 27)
exec.Font = Enum.Font.SourceSansBold
exec.Text = "Execute"
exec.TextColor3 = Color3.fromRGB(20, 74, 110)
exec.TextSize = 19.000
exec.TextWrapped = true

Exit.Name = "Exit"
Exit.Parent = Main
Exit.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
Exit.BackgroundTransparency = 1.000
Exit.BorderSizePixel = 0
Exit.Position = UDim2.new(0.877005637, 0, 0, 0)
Exit.Size = UDim2.new(0, 40, 0, 22)
Exit.Font = Enum.Font.SourceSans
Exit.Text = ""
Exit.TextColor3 = Color3.fromRGB(0, 0, 0)
Exit.TextSize = 14.000

Lines.Name = "Lines"
Lines.Parent = Main
Lines.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Lines.BackgroundTransparency = 1.000
Lines.Size = UDim2.new(0, 200, 0, 50)
Lines.Font = Enum.Font.SourceSans
Lines.TextColor3 = Color3.fromRGB(0, 0, 0)
Lines.TextSize = 14.000
Lines.TextTransparency = 1.000

ScrollingFrame.Parent = Main
ScrollingFrame.Active = true
ScrollingFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ScrollingFrame.BorderSizePixel = 0
ScrollingFrame.Position = UDim2.new(0.0358030051, 0, 0.842850685, 0)
ScrollingFrame.Size = UDim2.new(0, 268, 0, 50)
ScrollingFrame.ScrollBarThickness = 0

-- Scripts:

local function THTBRH_fake_script() -- Open.LocalScript 
	Open.MouseButton1Click:Connect(function()
		Open.Parent.Main.Visible = true
		wait()
		Open.Visible = false
	end)
end
coroutine.wrap(THTBRH_fake_script)()
local function HTAP_fake_script() -- Open_2.LocalScript 
	Open_2.MouseButton1Click:Connect(function()
	Open_2.Parent.Parent.ScriptHub.Visible = true
	end)
end
coroutine.wrap(HTAP_fake_script)()
local function GUBCKAL_fake_script() -- Exit.LocalScript 
	Exit.MouseButton1Click:Connect(function()
		Exit.Parent.Parent.Main.Visible = false
		wait()
		Exit.Parent.Parent.Open.Visible = true
	end)
end
coroutine.wrap(GUBCKAL_fake_script)()
local function PLHW_fake_script() -- Main.LocalScript 
	Main.Draggable = true
end
coroutine.wrap(PLHW_fake_script)()


local lua_keywords = {"and", "break", "do", "else", "elseif", "end", "false", "for", "function", "goto", "if", "in", "local", "nil", "not", "or", "repeat", "return", "then", "true", "until", "while", "is_synapse_function","is_protosmasher_caller", "execute","foreach","foreachi","insert","syn","HttpGet","HttpPost","__index","__namecall","__add","__call","__tostring","__tonumber","__div"}
local global_env = {"getrawmetatable", "game", "Workspace", "script", "math", "string", "table", "print", "wait", "BrickColor", "Color3", "next", "pairs", "ipairs", "select", "unpack", "Instance", "Vector2", "Vector3", "CFrame", "Ray", "UDim2", "Enum", "assert", "error", "warn", "tick", "loadstring", "_G", "shared", "getfenv", "setfenv", "newproxy", "setmetatable", "getmetatable", "os", "debug", "pcall", "ypcall", "xpcall", "rawequal", "rawset", "rawget", "tonumber", "tostring", "type", "typeof", "_VERSION", "coroutine", "delay", "require", "spawn", "LoadLibrary", "settings", "stats", "time", "UserSettings", "version", "Axes", "ColorSequence", "Faces", "ColorSequenceKeypoint", "NumberRange", "NumberSequence", "NumberSequenceKeypoint", "gcinfo", "elapsedTime", "collectgarbage", "PhysicalProperties", "Rect", "Region3", "Region3int16", "UDim", "Vector2int16", "Vector3int16","run_secure_function","create_secure_function","hookfunc","hookfunction","newcclosure","replaceclosure","islclosure","getgc","gcinfo","rconsolewarn","rconsoleprint","rconsoleinfo","rconsoleinput","rconsoleinputasync","rconsoleclear","rconsoleerr",}

local src = Source
local lin = Lines

local Highlight = function(string, keywords)
local K = {}
local S = string
local Token =
{
["="] = true,
["."] = true,
[","] = true,
["("] = true,
[")"] = true,
["["] = true,
["]"] = true,
["{"] = true,
["}"] = true,
[":"] = true,
["*"] = true,
["/"] = true,
["+"] = true,
["-"] = true,
["%"] = true,
[";"] = true,
["~"] = true
}
for i, v in pairs(keywords) do
K[v] = true
end
S = S:gsub(".", function(c)
if Token[c] ~= nil then
return "\32"
else
return c
end
end)
S = S:gsub("%S+", function(c)
if K[c] ~= nil then
return c
else
return (" "):rep(#c)
end
end)

return S
end

local hTokens = function(string)
local Token =
{
["="] = true,
["."] = true,
[","] = true,
["("] = true,
[")"] = true,
["["] = true,
["]"] = true,
["{"] = true,
["}"] = true,
[":"] = true,
["*"] = true,
["/"] = true,
["+"] = true,
["-"] = true,
["%"] = true,
[";"] = true,
["~"] = true
}
local A = ""
local B = [[]]
string:gsub(".", function(c)
if Token[c] ~= nil then
A = A .. c
elseif c == "\n" then
A = A .. "\n"
elseif c == "\t" then
A = A .. "\t"
else
A = A .. "\32"
end
end)
return A
end


local strings = function(string)
local highlight = ""
local quote = false
string:gsub(".", function(c)
if quote == false and c == "\"" then
quote = true
elseif quote == true and c == "\"" then
quote = false
end
if quote == false and c == "\"" then
highlight = highlight .. "\""
elseif c == "\n" then
highlight = highlight .. "\n"
elseif c == "\t" then
highlight = highlight .. "\t"
elseif quote == true then
highlight = highlight .. c
elseif quote == false then
highlight = highlight .. "\32"
end
end)

return highlight
end

local comments = function(string)
local ret = ""
string:gsub("[^\r\n]+", function(c)
local comm = false
local i = 0
c:gsub(".", function(n)
i = i + 1
if c:sub(i, i + 1) == "--" then
comm = true
end
if comm == true then
ret = ret .. n
else
ret = ret .. "\32"
end
end)
ret = ret
end)

return ret
end

local numbers = function(string)
local A = ""
string:gsub(".", function(c)
if tonumber(c) ~= nil then
A = A .. c
elseif c == "\n" then
A = A .. "\n"
elseif c == "\t" then
A = A .. "\t"
else
A = A .. "\32"
end
end)

return A
end

local highlight_source = function(type)
if type == "Text" then
src.Text = Source.Text:gsub("\13", "")
src.Text = Source.Text:gsub("\t", "      ")
local s = src.Text
src.Keywords_.Text = Highlight(s, lua_keywords)
src.Globals_.Text = Highlight(s, global_env)
src.RemoteHighlight_.Text = Highlight(s, {"FireServer", "fireServer", "InvokeServer", "invokeServer"})
src.Tokens_.Text = hTokens(s)
src.Numbers_.Text = numbers(s)
src.Strings_.Text = strings(s)
local lin = 1
s:gsub("\n", function()
lin = lin + 1
end)
Lines.Text = ""
for i = 1, lin do
Lines.Text = Lines.Text .. i .. "\n"
end
end
end

highlight_source("Text")

src.Changed:Connect(highlight_source)
exec.MouseButton1Click:Connect(function()
assert(loadstring(Source.Text))()
end)
clear.MouseButton1Click:Connect(function()
   Source.Text = ""
end)

Main.Active = true
Main.Draggable = true
